// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protocol/init.proto

package protocol

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SealedNodeRecord struct {
	//
	//nodeRecord contains node data in binary format specified below:
	//SeqID - 4 bytes, sequential ID of NodeRecord
	//NodeID - 20 bytes, address of network node
	//Network - 1 byte, allowed values are 0x04 and 0x06, for IPv4 and IPv6 accordingly
	//Port - 2 bytes, little-endian integer
	//IPAddress - 4 or 16 bytes, depends on value of `net`
	NodeRecord           []byte   `protobuf:"bytes,1,opt,name=nodeRecord,proto3" json:"nodeRecord,omitempty"`
	Signature            []byte   `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SealedNodeRecord) Reset()         { *m = SealedNodeRecord{} }
func (m *SealedNodeRecord) String() string { return proto.CompactTextString(m) }
func (*SealedNodeRecord) ProtoMessage()    {}
func (*SealedNodeRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_80b66ecdaf2ec123, []int{0}
}

func (m *SealedNodeRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SealedNodeRecord.Unmarshal(m, b)
}
func (m *SealedNodeRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SealedNodeRecord.Marshal(b, m, deterministic)
}
func (m *SealedNodeRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SealedNodeRecord.Merge(m, src)
}
func (m *SealedNodeRecord) XXX_Size() int {
	return xxx_messageInfo_SealedNodeRecord.Size(m)
}
func (m *SealedNodeRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_SealedNodeRecord.DiscardUnknown(m)
}

var xxx_messageInfo_SealedNodeRecord proto.InternalMessageInfo

func (m *SealedNodeRecord) GetNodeRecord() []byte {
	if m != nil {
		return m.NodeRecord
	}
	return nil
}

func (m *SealedNodeRecord) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

// Both sides send own HelloMessage with network and chain initial data
// HelloMessage is connection initial message
type HelloMessage struct {
	ProtoVersion         uint32            `protobuf:"varint,1,opt,name=protoVersion,proto3" json:"protoVersion,omitempty"`
	NetworkID            uint32            `protobuf:"varint,2,opt,name=networkID,proto3" json:"networkID,omitempty"`
	GenesisHash          []byte            `protobuf:"bytes,3,opt,name=genesisHash,proto3" json:"genesisHash,omitempty"`
	LastBlockHash        []byte            `protobuf:"bytes,4,opt,name=lastBlockHash,proto3" json:"lastBlockHash,omitempty"`
	LastBlockIndex       uint64            `protobuf:"varint,5,opt,name=lastBlockIndex,proto3" json:"lastBlockIndex,omitempty"`
	SealedNodeRecord     *SealedNodeRecord `protobuf:"bytes,7,opt,name=sealedNodeRecord,proto3" json:"sealedNodeRecord,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *HelloMessage) Reset()         { *m = HelloMessage{} }
func (m *HelloMessage) String() string { return proto.CompactTextString(m) }
func (*HelloMessage) ProtoMessage()    {}
func (*HelloMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_80b66ecdaf2ec123, []int{1}
}

func (m *HelloMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloMessage.Unmarshal(m, b)
}
func (m *HelloMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloMessage.Marshal(b, m, deterministic)
}
func (m *HelloMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloMessage.Merge(m, src)
}
func (m *HelloMessage) XXX_Size() int {
	return xxx_messageInfo_HelloMessage.Size(m)
}
func (m *HelloMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloMessage.DiscardUnknown(m)
}

var xxx_messageInfo_HelloMessage proto.InternalMessageInfo

func (m *HelloMessage) GetProtoVersion() uint32 {
	if m != nil {
		return m.ProtoVersion
	}
	return 0
}

func (m *HelloMessage) GetNetworkID() uint32 {
	if m != nil {
		return m.NetworkID
	}
	return 0
}

func (m *HelloMessage) GetGenesisHash() []byte {
	if m != nil {
		return m.GenesisHash
	}
	return nil
}

func (m *HelloMessage) GetLastBlockHash() []byte {
	if m != nil {
		return m.LastBlockHash
	}
	return nil
}

func (m *HelloMessage) GetLastBlockIndex() uint64 {
	if m != nil {
		return m.LastBlockIndex
	}
	return 0
}

func (m *HelloMessage) GetSealedNodeRecord() *SealedNodeRecord {
	if m != nil {
		return m.SealedNodeRecord
	}
	return nil
}

// Ping is request for node record data
type Ping struct {
	// Tag is 32 bytes length data: xor(sha3(PONG_SENDER_ID), PING_SENDER_ID)
	Tag                  []byte   `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	Nonce                uint64   `protobuf:"varint,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ping) Reset()         { *m = Ping{} }
func (m *Ping) String() string { return proto.CompactTextString(m) }
func (*Ping) ProtoMessage()    {}
func (*Ping) Descriptor() ([]byte, []int) {
	return fileDescriptor_80b66ecdaf2ec123, []int{2}
}

func (m *Ping) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ping.Unmarshal(m, b)
}
func (m *Ping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ping.Marshal(b, m, deterministic)
}
func (m *Ping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ping.Merge(m, src)
}
func (m *Ping) XXX_Size() int {
	return xxx_messageInfo_Ping.Size(m)
}
func (m *Ping) XXX_DiscardUnknown() {
	xxx_messageInfo_Ping.DiscardUnknown(m)
}

var xxx_messageInfo_Ping proto.InternalMessageInfo

func (m *Ping) GetTag() []byte {
	if m != nil {
		return m.Tag
	}
	return nil
}

func (m *Ping) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

type Pong struct {
	Tag              []byte            `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	NodeRecord       *SealedNodeRecord `protobuf:"bytes,2,opt,name=nodeRecord,proto3" json:"nodeRecord,omitempty"`
	RecipientAddress string            `protobuf:"bytes,3,opt,name=recipientAddress,proto3" json:"recipientAddress,omitempty"`
	// Signature is calculated over tag||nodeRecord||recipientAddress
	Signature            []byte   `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pong) Reset()         { *m = Pong{} }
func (m *Pong) String() string { return proto.CompactTextString(m) }
func (*Pong) ProtoMessage()    {}
func (*Pong) Descriptor() ([]byte, []int) {
	return fileDescriptor_80b66ecdaf2ec123, []int{3}
}

func (m *Pong) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pong.Unmarshal(m, b)
}
func (m *Pong) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pong.Marshal(b, m, deterministic)
}
func (m *Pong) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pong.Merge(m, src)
}
func (m *Pong) XXX_Size() int {
	return xxx_messageInfo_Pong.Size(m)
}
func (m *Pong) XXX_DiscardUnknown() {
	xxx_messageInfo_Pong.DiscardUnknown(m)
}

var xxx_messageInfo_Pong proto.InternalMessageInfo

func (m *Pong) GetTag() []byte {
	if m != nil {
		return m.Tag
	}
	return nil
}

func (m *Pong) GetNodeRecord() *SealedNodeRecord {
	if m != nil {
		return m.NodeRecord
	}
	return nil
}

func (m *Pong) GetRecipientAddress() string {
	if m != nil {
		return m.RecipientAddress
	}
	return ""
}

func (m *Pong) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

// FindNode is request for Neighbours message, it
// should contain up to 16 nodes with nearest target
type FindNode struct {
	// Target is 32 byte length hash of target node
	Target               []byte   `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindNode) Reset()         { *m = FindNode{} }
func (m *FindNode) String() string { return proto.CompactTextString(m) }
func (*FindNode) ProtoMessage()    {}
func (*FindNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_80b66ecdaf2ec123, []int{4}
}

func (m *FindNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindNode.Unmarshal(m, b)
}
func (m *FindNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindNode.Marshal(b, m, deterministic)
}
func (m *FindNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindNode.Merge(m, src)
}
func (m *FindNode) XXX_Size() int {
	return xxx_messageInfo_FindNode.Size(m)
}
func (m *FindNode) XXX_DiscardUnknown() {
	xxx_messageInfo_FindNode.DiscardUnknown(m)
}

var xxx_messageInfo_FindNode proto.InternalMessageInfo

func (m *FindNode) GetTarget() []byte {
	if m != nil {
		return m.Target
	}
	return nil
}

type Neighbours struct {
	Total                uint32              `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Nodes                []*SealedNodeRecord `protobuf:"bytes,2,rep,name=nodes,proto3" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Neighbours) Reset()         { *m = Neighbours{} }
func (m *Neighbours) String() string { return proto.CompactTextString(m) }
func (*Neighbours) ProtoMessage()    {}
func (*Neighbours) Descriptor() ([]byte, []int) {
	return fileDescriptor_80b66ecdaf2ec123, []int{5}
}

func (m *Neighbours) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Neighbours.Unmarshal(m, b)
}
func (m *Neighbours) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Neighbours.Marshal(b, m, deterministic)
}
func (m *Neighbours) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Neighbours.Merge(m, src)
}
func (m *Neighbours) XXX_Size() int {
	return xxx_messageInfo_Neighbours.Size(m)
}
func (m *Neighbours) XXX_DiscardUnknown() {
	xxx_messageInfo_Neighbours.DiscardUnknown(m)
}

var xxx_messageInfo_Neighbours proto.InternalMessageInfo

func (m *Neighbours) GetTotal() uint32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *Neighbours) GetNodes() []*SealedNodeRecord {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func init() {
	proto.RegisterType((*SealedNodeRecord)(nil), "protocol.SealedNodeRecord")
	proto.RegisterType((*HelloMessage)(nil), "protocol.HelloMessage")
	proto.RegisterType((*Ping)(nil), "protocol.Ping")
	proto.RegisterType((*Pong)(nil), "protocol.Pong")
	proto.RegisterType((*FindNode)(nil), "protocol.FindNode")
	proto.RegisterType((*Neighbours)(nil), "protocol.Neighbours")
}

func init() { proto.RegisterFile("protocol/init.proto", fileDescriptor_80b66ecdaf2ec123) }

var fileDescriptor_80b66ecdaf2ec123 = []byte{
	// 364 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0xcf, 0x4a, 0xeb, 0x40,
	0x14, 0xc6, 0x49, 0x9a, 0xf6, 0xb6, 0xa7, 0xed, 0x25, 0xcc, 0xbd, 0x5c, 0xc2, 0x45, 0x24, 0x04,
	0x91, 0xe2, 0x22, 0x8a, 0xee, 0xdc, 0x29, 0x52, 0xda, 0x85, 0xa5, 0x8c, 0xe2, 0x7e, 0x9a, 0x1c,
	0xd2, 0xa1, 0x61, 0xa6, 0xcc, 0x4c, 0xd1, 0x47, 0xf0, 0x29, 0x7c, 0x56, 0xc9, 0x24, 0xfd, 0x93,
	0x54, 0xe8, 0x2e, 0xdf, 0x2f, 0x67, 0xce, 0x9f, 0xef, 0x83, 0x3f, 0x6b, 0x25, 0x8d, 0x4c, 0x64,
	0x7e, 0xcd, 0x05, 0x37, 0xb1, 0x55, 0xa4, 0xbb, 0x85, 0xd1, 0x1c, 0xfc, 0x17, 0x64, 0x39, 0xa6,
	0x33, 0x99, 0x22, 0xc5, 0x44, 0xaa, 0x94, 0x9c, 0x03, 0x88, 0x9d, 0x0a, 0x9c, 0xd0, 0x19, 0x0d,
	0xe8, 0x01, 0x21, 0x67, 0xd0, 0xd3, 0x3c, 0x13, 0xcc, 0x6c, 0x14, 0x06, 0xae, 0xfd, 0xbd, 0x07,
	0xd1, 0xa7, 0x0b, 0x83, 0x09, 0xe6, 0xb9, 0x7c, 0x46, 0xad, 0x59, 0x86, 0x24, 0x82, 0x81, 0x1d,
	0xf7, 0x86, 0x4a, 0x73, 0x29, 0x6c, 0xc3, 0x21, 0xad, 0xb1, 0xa2, 0xa5, 0x40, 0xf3, 0x2e, 0xd5,
	0x6a, 0xfa, 0x64, 0x5b, 0x0e, 0xe9, 0x1e, 0x90, 0x10, 0xfa, 0x19, 0x0a, 0xd4, 0x5c, 0x4f, 0x98,
	0x5e, 0x06, 0x2d, 0x3b, 0xf2, 0x10, 0x91, 0x0b, 0x18, 0xe6, 0x4c, 0x9b, 0xc7, 0x5c, 0x26, 0x2b,
	0x5b, 0xe3, 0xd9, 0x9a, 0x3a, 0x24, 0x97, 0xf0, 0x7b, 0x07, 0xa6, 0x22, 0xc5, 0x8f, 0xa0, 0x1d,
	0x3a, 0x23, 0x8f, 0x36, 0x28, 0x19, 0x83, 0xaf, 0x1b, 0xa6, 0x04, 0xbf, 0x42, 0x67, 0xd4, 0xbf,
	0xfd, 0x1f, 0x6f, 0x9d, 0x8b, 0x9b, 0xb6, 0xd1, 0xa3, 0x37, 0x51, 0x0c, 0xde, 0x9c, 0x8b, 0x8c,
	0xf8, 0xd0, 0x32, 0x2c, 0xab, 0x9c, 0x2c, 0x3e, 0xc9, 0x5f, 0x68, 0x0b, 0x29, 0x92, 0xd2, 0x3e,
	0x8f, 0x96, 0x22, 0xfa, 0x72, 0xc0, 0x9b, 0xcb, 0x1f, 0x1f, 0xdc, 0xd7, 0x32, 0x71, 0x4f, 0x2e,
	0x73, 0x98, 0xd7, 0x15, 0xf8, 0x0a, 0x13, 0xbe, 0xe6, 0x28, 0xcc, 0x43, 0x9a, 0x2a, 0xd4, 0xda,
	0x7a, 0xd8, 0xa3, 0x47, 0xbc, 0x9e, 0x6d, 0xbb, 0x99, 0x6d, 0x04, 0xdd, 0x31, 0x17, 0x76, 0x0e,
	0xf9, 0x07, 0x1d, 0xc3, 0x54, 0x86, 0xa6, 0x5a, 0xb3, 0x52, 0xd1, 0x2b, 0xc0, 0x0c, 0x79, 0xb6,
	0x5c, 0xc8, 0x8d, 0xd2, 0xc5, 0xa1, 0x46, 0x1a, 0x96, 0x57, 0xa9, 0x97, 0x82, 0xdc, 0x14, 0xe7,
	0xa7, 0xa8, 0x03, 0x37, 0x6c, 0x9d, 0x38, 0xa4, 0x2c, 0x5c, 0x74, 0x6c, 0xc5, 0xdd, 0x77, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xf2, 0x37, 0x5f, 0x3f, 0xcf, 0x02, 0x00, 0x00,
}
